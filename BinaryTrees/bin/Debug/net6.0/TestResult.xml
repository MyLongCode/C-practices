<?xml version="1.0" encoding="utf-8"?>
<test-run id="2" name="BinaryTrees.dll" fullname="C:/Users/user/OneDrive/Desktop/Прога C#/Уроки/BinaryTrees/bin/Debug/net6.0/BinaryTrees.dll" testcasecount="23" result="Passed" start-time="2023-05-12T15:43:07.3864498Z" end-time="2023-05-12T15:43:07.9606407Z" duration="0.574162" total="23" passed="23" failed="0" inconclusive="0" skipped="0" warnings="0" asserts="72425" random-seed="125886034">
  <command-line><![CDATA["C:\Users\user\OneDrive\Desktop\Прога C#\Уроки\BinaryTrees\bin\Debug\net6.0\BinaryTrees.dll"]]></command-line>
  <filter />
  <test-suite type="Assembly" id="1029" name="BinaryTrees.dll" fullname="C:/Users/user/OneDrive/Desktop/Прога C#/Уроки/BinaryTrees/bin/Debug/net6.0/BinaryTrees.dll" runstate="Runnable" testcasecount="23" result="Passed" start-time="2023-05-12T15:43:07.3864498Z" end-time="2023-05-12T15:43:07.9606407Z" duration="0.574162" total="23" passed="23" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="72425">
    <environment framework-version="3.13.3.0" clr-version="6.0.8" os-version="Microsoft Windows 10.0.19044" platform="Win32NT" cwd="C:\Users\user\OneDrive\Desktop\Прога C#\Уроки\BinaryTrees\bin\Debug\net6.0" machine-name="LAPTOP-8TVMJ0TV" user="user" user-domain="LAPTOP-8TVMJ0TV" culture="ru-RU" uiculture="ru-RU" os-architecture="x64" />
    <settings>
      <setting name="WorkDirectory" value="C:\Users\user\OneDrive\Desktop\Прога C#\Уроки\BinaryTrees\bin\Debug\net6.0" />
      <setting name="NumberOfTestWorkers" value="12" />
    </settings>
    <properties>
      <property name="_PID" value="29864" />
      <property name="_APPDOMAIN" value="BinaryTrees" />
    </properties>
    <test-suite type="TestSuite" id="1030" name="BinaryTrees" fullname="BinaryTrees" runstate="Runnable" testcasecount="23" result="Passed" start-time="2023-05-12T15:43:07.3906716Z" end-time="2023-05-12T15:43:07.9606373Z" duration="0.569965" total="23" passed="23" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="72425">
      <test-suite type="TestFixture" id="1000" name="BinaryTreeInTask1_should" fullname="BinaryTrees.BinaryTreeInTask1_should" classname="BinaryTrees.BinaryTreeInTask1_should" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-05-12T15:43:07.3919504Z" end-time="2023-05-12T15:43:07.4333683Z" duration="0.041418" total="5" passed="5" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="2062">
        <test-case id="1001" name="EmptyTreeDoesNotContainDefaultValue" fullname="BinaryTrees.BinaryTreeInTask1_should.EmptyTreeDoesNotContainDefaultValue" methodname="EmptyTreeDoesNotContainDefaultValue" classname="BinaryTrees.BinaryTreeInTask1_should" runstate="Runnable" seed="1340562663" result="Passed" start-time="2023-05-12T15:43:07.3943427Z" end-time="2023-05-12T15:43:07.4001926Z" duration="0.005943" asserts="2" />
        <test-case id="1002" name="WorkWithIntegers" fullname="BinaryTrees.BinaryTreeInTask1_should.WorkWithIntegers" methodname="WorkWithIntegers" classname="BinaryTrees.BinaryTreeInTask1_should" runstate="Runnable" seed="368127606" result="Passed" start-time="2023-05-12T15:43:07.4020999Z" end-time="2023-05-12T15:43:07.4145086Z" duration="0.012409" asserts="20" />
        <test-case id="1003" name="WorkWithManyIntegers" fullname="BinaryTrees.BinaryTreeInTask1_should.WorkWithManyIntegers" methodname="WorkWithManyIntegers" classname="BinaryTrees.BinaryTreeInTask1_should" runstate="Runnable" seed="276574758" result="Passed" start-time="2023-05-12T15:43:07.4145373Z" end-time="2023-05-12T15:43:07.4284604Z" duration="0.013924" asserts="2000" />
        <test-case id="1004" name="WorkWithStrings" fullname="BinaryTrees.BinaryTreeInTask1_should.WorkWithStrings" methodname="WorkWithStrings" classname="BinaryTrees.BinaryTreeInTask1_should" runstate="Runnable" seed="73548956" result="Passed" start-time="2023-05-12T15:43:07.4284954Z" end-time="2023-05-12T15:43:07.4308245Z" duration="0.002329" asserts="20" />
        <test-case id="1005" name="WorkWithTuples" fullname="BinaryTrees.BinaryTreeInTask1_should.WorkWithTuples" methodname="WorkWithTuples" classname="BinaryTrees.BinaryTreeInTask1_should" runstate="Runnable" seed="363425136" result="Passed" start-time="2023-05-12T15:43:07.4308455Z" end-time="2023-05-12T15:43:07.4325281Z" duration="0.001683" asserts="20" />
      </test-suite>
      <test-suite type="TestFixture" id="1006" name="BinaryTreeInTask2_should" fullname="BinaryTrees.BinaryTreeInTask2_should" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" testcasecount="18" result="Passed" start-time="2023-05-12T15:43:07.4343774Z" end-time="2023-05-12T15:43:07.9606291Z" duration="0.526251" total="18" passed="18" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="70363">
        <test-suite type="ParameterizedMethod" id="1027" name="CheckIEnumeratorIsLazy" fullname="BinaryTrees.BinaryTreeInTask2_should.CheckIEnumeratorIsLazy" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" testcasecount="1" result="Passed" start-time="2023-05-12T15:43:07.4344870Z" end-time="2023-05-12T15:43:07.6036689Z" duration="0.169182" total="1" passed="1" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="10001">
          <test-case id="1026" name="CheckIEnumeratorIsLazy(100000)" fullname="BinaryTrees.BinaryTreeInTask2_should.CheckIEnumeratorIsLazy(100000)" methodname="CheckIEnumeratorIsLazy" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="1940402096" result="Passed" start-time="2023-05-12T15:43:07.4346335Z" end-time="2023-05-12T15:43:07.6035635Z" duration="0.168931" asserts="10001" />
        </test-suite>
        <test-suite type="ParameterizedMethod" id="1012" name="SortIntegers" fullname="BinaryTrees.BinaryTreeInTask2_should.SortIntegers" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-05-12T15:43:07.6037032Z" end-time="2023-05-12T15:43:07.6283210Z" duration="0.024618" total="5" passed="5" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="10">
          <test-case id="1007" name="SortIntegers(0,1)" fullname="BinaryTrees.BinaryTreeInTask2_should.SortIntegers(0,1)" methodname="SortIntegers" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="284771690" result="Passed" start-time="2023-05-12T15:43:07.6037604Z" end-time="2023-05-12T15:43:07.6077468Z" duration="0.003987" asserts="2" />
          <test-case id="1008" name="SortIntegers(0,2)" fullname="BinaryTrees.BinaryTreeInTask2_should.SortIntegers(0,2)" methodname="SortIntegers" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="2010904856" result="Passed" start-time="2023-05-12T15:43:07.6077979Z" end-time="2023-05-12T15:43:07.6080329Z" duration="0.000235" asserts="2" />
          <test-case id="1009" name="SortIntegers(0,30)" fullname="BinaryTrees.BinaryTreeInTask2_should.SortIntegers(0,30)" methodname="SortIntegers" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="233797585" result="Passed" start-time="2023-05-12T15:43:07.6081334Z" end-time="2023-05-12T15:43:07.6082463Z" duration="0.000113" asserts="2" />
          <test-case id="1010" name="SortIntegers(20,100)" fullname="BinaryTrees.BinaryTreeInTask2_should.SortIntegers(20,100)" methodname="SortIntegers" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="384515773" result="Passed" start-time="2023-05-12T15:43:07.6082604Z" end-time="2023-05-12T15:43:07.6084397Z" duration="0.000179" asserts="2" />
          <test-case id="1011" name="SortIntegers(0,10000)" fullname="BinaryTrees.BinaryTreeInTask2_should.SortIntegers(0,10000)" methodname="SortIntegers" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="2125520100" result="Passed" start-time="2023-05-12T15:43:07.6084509Z" end-time="2023-05-12T15:43:07.6282808Z" duration="0.019831" asserts="2" />
        </test-suite>
        <test-suite type="ParameterizedMethod" id="1019" name="SupportIndexersForIntValues" fullname="BinaryTrees.BinaryTreeInTask2_should.SupportIndexersForIntValues" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" testcasecount="6" result="Passed" start-time="2023-05-12T15:43:07.6283424Z" end-time="2023-05-12T15:43:07.6917123Z" duration="0.063370" total="6" passed="6" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="10133">
          <test-case id="1013" name="SupportIndexersForIntValues(0,0)" fullname="BinaryTrees.BinaryTreeInTask2_should.SupportIndexersForIntValues(0,0)" methodname="SupportIndexersForIntValues" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="886142084" result="Passed" start-time="2023-05-12T15:43:07.6283839Z" end-time="2023-05-12T15:43:07.6579542Z" duration="0.029571" asserts="0" />
          <test-case id="1014" name="SupportIndexersForIntValues(0,1)" fullname="BinaryTrees.BinaryTreeInTask2_should.SupportIndexersForIntValues(0,1)" methodname="SupportIndexersForIntValues" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="2109703356" result="Passed" start-time="2023-05-12T15:43:07.6579807Z" end-time="2023-05-12T15:43:07.6586931Z" duration="0.000713" asserts="1" />
          <test-case id="1015" name="SupportIndexersForIntValues(0,2)" fullname="BinaryTrees.BinaryTreeInTask2_should.SupportIndexersForIntValues(0,2)" methodname="SupportIndexersForIntValues" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="1316871621" result="Passed" start-time="2023-05-12T15:43:07.6587268Z" end-time="2023-05-12T15:43:07.6591620Z" duration="0.000436" asserts="2" />
          <test-case id="1016" name="SupportIndexersForIntValues(0,30)" fullname="BinaryTrees.BinaryTreeInTask2_should.SupportIndexersForIntValues(0,30)" methodname="SupportIndexersForIntValues" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="458052990" result="Passed" start-time="2023-05-12T15:43:07.6591857Z" end-time="2023-05-12T15:43:07.6595188Z" duration="0.000333" asserts="30" />
          <test-case id="1017" name="SupportIndexersForIntValues(20,100)" fullname="BinaryTrees.BinaryTreeInTask2_should.SupportIndexersForIntValues(20,100)" methodname="SupportIndexersForIntValues" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="97273744" result="Passed" start-time="2023-05-12T15:43:07.6595357Z" end-time="2023-05-12T15:43:07.6599457Z" duration="0.000410" asserts="100" />
          <test-case id="1018" name="SupportIndexersForIntValues(0,10000)" fullname="BinaryTrees.BinaryTreeInTask2_should.SupportIndexersForIntValues(0,10000)" methodname="SupportIndexersForIntValues" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="825707056" result="Passed" start-time="2023-05-12T15:43:07.6599601Z" end-time="2023-05-12T15:43:07.6916704Z" duration="0.031711" asserts="10000" />
        </test-suite>
        <test-suite type="ParameterizedMethod" id="1025" name="SupportIndexersForStringValues" fullname="BinaryTrees.BinaryTreeInTask2_should.SupportIndexersForStringValues" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" testcasecount="5" result="Passed" start-time="2023-05-12T15:43:07.6917330Z" end-time="2023-05-12T15:43:07.6969865Z" duration="0.005253" total="5" passed="5" failed="0" warnings="0" inconclusive="0" skipped="0" asserts="133">
          <test-case id="1020" name="SupportIndexersForStringValues(0,0)" fullname="BinaryTrees.BinaryTreeInTask2_should.SupportIndexersForStringValues(0,0)" methodname="SupportIndexersForStringValues" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="2016814807" result="Passed" start-time="2023-05-12T15:43:07.6917768Z" end-time="2023-05-12T15:43:07.6949817Z" duration="0.003205" asserts="0" />
          <test-case id="1021" name="SupportIndexersForStringValues(0,1)" fullname="BinaryTrees.BinaryTreeInTask2_should.SupportIndexersForStringValues(0,1)" methodname="SupportIndexersForStringValues" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="2052664070" result="Passed" start-time="2023-05-12T15:43:07.6950084Z" end-time="2023-05-12T15:43:07.6957128Z" duration="0.000705" asserts="1" />
          <test-case id="1022" name="SupportIndexersForStringValues(0,2)" fullname="BinaryTrees.BinaryTreeInTask2_should.SupportIndexersForStringValues(0,2)" methodname="SupportIndexersForStringValues" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="1050832754" result="Passed" start-time="2023-05-12T15:43:07.6957382Z" end-time="2023-05-12T15:43:07.6960249Z" duration="0.000287" asserts="2" />
          <test-case id="1023" name="SupportIndexersForStringValues(0,30)" fullname="BinaryTrees.BinaryTreeInTask2_should.SupportIndexersForStringValues(0,30)" methodname="SupportIndexersForStringValues" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="396954501" result="Passed" start-time="2023-05-12T15:43:07.6960447Z" end-time="2023-05-12T15:43:07.6963998Z" duration="0.000355" asserts="30" />
          <test-case id="1024" name="SupportIndexersForStringValues(20,100)" fullname="BinaryTrees.BinaryTreeInTask2_should.SupportIndexersForStringValues(20,100)" methodname="SupportIndexersForStringValues" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="1163114829" result="Passed" start-time="2023-05-12T15:43:07.6964250Z" end-time="2023-05-12T15:43:07.6969567Z" duration="0.000532" asserts="100" />
        </test-suite>
        <test-case id="1028" name="WorkWithMixedAddAndContains" fullname="BinaryTrees.BinaryTreeInTask2_should.WorkWithMixedAddAndContains" methodname="WorkWithMixedAddAndContains" classname="BinaryTrees.BinaryTreeInTask2_should" runstate="Runnable" seed="643809985" result="Passed" start-time="2023-05-12T15:43:07.6970016Z" end-time="2023-05-12T15:43:07.9605797Z" duration="0.263579" asserts="50086" />
      </test-suite>
    </test-suite>
  </test-suite>
</test-run>